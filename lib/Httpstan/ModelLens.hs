{-
   httpstan

   No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

   OpenAPI Version: 3.0.1
   httpstan API version: 4.10.0
   Generated by OpenAPI Generator (https://openapi-generator.tech)
-}

{-|
Module : Httpstan.Lens
-}

{-# LANGUAGE KindSignatures #-}
{-# LANGUAGE NamedFieldPuns #-}
{-# LANGUAGE RankNTypes #-}
{-# LANGUAGE RecordWildCards #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-matches -fno-warn-unused-binds -fno-warn-unused-imports #-}

module Httpstan.ModelLens where

import qualified Data.Aeson as A
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Data, Typeable)
import qualified Data.Map as Map
import qualified Data.Set as Set
import qualified Data.Time as TI

import Data.Text (Text)

import Prelude (($), (.),(<$>),(<*>),(=<<),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)
import qualified Prelude as P

import Httpstan.Model
import Httpstan.Core


-- * CreateFitRequest

-- | 'createFitRequestChain' Lens
createFitRequestChainL :: Lens_' CreateFitRequest (Maybe Int)
createFitRequestChainL f CreateFitRequest{..} = (\createFitRequestChain -> CreateFitRequest { createFitRequestChain, ..} ) <$> f createFitRequestChain
{-# INLINE createFitRequestChainL #-}

-- | 'createFitRequestData' Lens
createFitRequestDataL :: Lens_' CreateFitRequest (Maybe A.Value)
createFitRequestDataL f CreateFitRequest{..} = (\createFitRequestData -> CreateFitRequest { createFitRequestData, ..} ) <$> f createFitRequestData
{-# INLINE createFitRequestDataL #-}

-- | 'createFitRequestDelta' Lens
createFitRequestDeltaL :: Lens_' CreateFitRequest (Maybe Double)
createFitRequestDeltaL f CreateFitRequest{..} = (\createFitRequestDelta -> CreateFitRequest { createFitRequestDelta, ..} ) <$> f createFitRequestDelta
{-# INLINE createFitRequestDeltaL #-}

-- | 'createFitRequestFunction' Lens
createFitRequestFunctionL :: Lens_' CreateFitRequest (E'Function)
createFitRequestFunctionL f CreateFitRequest{..} = (\createFitRequestFunction -> CreateFitRequest { createFitRequestFunction, ..} ) <$> f createFitRequestFunction
{-# INLINE createFitRequestFunctionL #-}

-- | 'createFitRequestGamma' Lens
createFitRequestGammaL :: Lens_' CreateFitRequest (Maybe Double)
createFitRequestGammaL f CreateFitRequest{..} = (\createFitRequestGamma -> CreateFitRequest { createFitRequestGamma, ..} ) <$> f createFitRequestGamma
{-# INLINE createFitRequestGammaL #-}

-- | 'createFitRequestInit' Lens
createFitRequestInitL :: Lens_' CreateFitRequest (Maybe A.Value)
createFitRequestInitL f CreateFitRequest{..} = (\createFitRequestInit -> CreateFitRequest { createFitRequestInit, ..} ) <$> f createFitRequestInit
{-# INLINE createFitRequestInitL #-}

-- | 'createFitRequestInitBuffer' Lens
createFitRequestInitBufferL :: Lens_' CreateFitRequest (Maybe Int)
createFitRequestInitBufferL f CreateFitRequest{..} = (\createFitRequestInitBuffer -> CreateFitRequest { createFitRequestInitBuffer, ..} ) <$> f createFitRequestInitBuffer
{-# INLINE createFitRequestInitBufferL #-}

-- | 'createFitRequestInitRadius' Lens
createFitRequestInitRadiusL :: Lens_' CreateFitRequest (Maybe Double)
createFitRequestInitRadiusL f CreateFitRequest{..} = (\createFitRequestInitRadius -> CreateFitRequest { createFitRequestInitRadius, ..} ) <$> f createFitRequestInitRadius
{-# INLINE createFitRequestInitRadiusL #-}

-- | 'createFitRequestKappa' Lens
createFitRequestKappaL :: Lens_' CreateFitRequest (Maybe Double)
createFitRequestKappaL f CreateFitRequest{..} = (\createFitRequestKappa -> CreateFitRequest { createFitRequestKappa, ..} ) <$> f createFitRequestKappa
{-# INLINE createFitRequestKappaL #-}

-- | 'createFitRequestMaxDepth' Lens
createFitRequestMaxDepthL :: Lens_' CreateFitRequest (Maybe Int)
createFitRequestMaxDepthL f CreateFitRequest{..} = (\createFitRequestMaxDepth -> CreateFitRequest { createFitRequestMaxDepth, ..} ) <$> f createFitRequestMaxDepth
{-# INLINE createFitRequestMaxDepthL #-}

-- | 'createFitRequestNumSamples' Lens
createFitRequestNumSamplesL :: Lens_' CreateFitRequest (Maybe Int)
createFitRequestNumSamplesL f CreateFitRequest{..} = (\createFitRequestNumSamples -> CreateFitRequest { createFitRequestNumSamples, ..} ) <$> f createFitRequestNumSamples
{-# INLINE createFitRequestNumSamplesL #-}

-- | 'createFitRequestNumThin' Lens
createFitRequestNumThinL :: Lens_' CreateFitRequest (Maybe Int)
createFitRequestNumThinL f CreateFitRequest{..} = (\createFitRequestNumThin -> CreateFitRequest { createFitRequestNumThin, ..} ) <$> f createFitRequestNumThin
{-# INLINE createFitRequestNumThinL #-}

-- | 'createFitRequestNumWarmup' Lens
createFitRequestNumWarmupL :: Lens_' CreateFitRequest (Maybe Int)
createFitRequestNumWarmupL f CreateFitRequest{..} = (\createFitRequestNumWarmup -> CreateFitRequest { createFitRequestNumWarmup, ..} ) <$> f createFitRequestNumWarmup
{-# INLINE createFitRequestNumWarmupL #-}

-- | 'createFitRequestRandomSeed' Lens
createFitRequestRandomSeedL :: Lens_' CreateFitRequest (Maybe Int)
createFitRequestRandomSeedL f CreateFitRequest{..} = (\createFitRequestRandomSeed -> CreateFitRequest { createFitRequestRandomSeed, ..} ) <$> f createFitRequestRandomSeed
{-# INLINE createFitRequestRandomSeedL #-}

-- | 'createFitRequestRefresh' Lens
createFitRequestRefreshL :: Lens_' CreateFitRequest (Maybe Int)
createFitRequestRefreshL f CreateFitRequest{..} = (\createFitRequestRefresh -> CreateFitRequest { createFitRequestRefresh, ..} ) <$> f createFitRequestRefresh
{-# INLINE createFitRequestRefreshL #-}

-- | 'createFitRequestSaveWarmup' Lens
createFitRequestSaveWarmupL :: Lens_' CreateFitRequest (Maybe Bool)
createFitRequestSaveWarmupL f CreateFitRequest{..} = (\createFitRequestSaveWarmup -> CreateFitRequest { createFitRequestSaveWarmup, ..} ) <$> f createFitRequestSaveWarmup
{-# INLINE createFitRequestSaveWarmupL #-}

-- | 'createFitRequestStepsize' Lens
createFitRequestStepsizeL :: Lens_' CreateFitRequest (Maybe Double)
createFitRequestStepsizeL f CreateFitRequest{..} = (\createFitRequestStepsize -> CreateFitRequest { createFitRequestStepsize, ..} ) <$> f createFitRequestStepsize
{-# INLINE createFitRequestStepsizeL #-}

-- | 'createFitRequestStepsizeJitter' Lens
createFitRequestStepsizeJitterL :: Lens_' CreateFitRequest (Maybe Double)
createFitRequestStepsizeJitterL f CreateFitRequest{..} = (\createFitRequestStepsizeJitter -> CreateFitRequest { createFitRequestStepsizeJitter, ..} ) <$> f createFitRequestStepsizeJitter
{-# INLINE createFitRequestStepsizeJitterL #-}

-- | 'createFitRequestT0' Lens
createFitRequestT0L :: Lens_' CreateFitRequest (Maybe Double)
createFitRequestT0L f CreateFitRequest{..} = (\createFitRequestT0 -> CreateFitRequest { createFitRequestT0, ..} ) <$> f createFitRequestT0
{-# INLINE createFitRequestT0L #-}

-- | 'createFitRequestTermBuffer' Lens
createFitRequestTermBufferL :: Lens_' CreateFitRequest (Maybe Int)
createFitRequestTermBufferL f CreateFitRequest{..} = (\createFitRequestTermBuffer -> CreateFitRequest { createFitRequestTermBuffer, ..} ) <$> f createFitRequestTermBuffer
{-# INLINE createFitRequestTermBufferL #-}

-- | 'createFitRequestWindow' Lens
createFitRequestWindowL :: Lens_' CreateFitRequest (Maybe Int)
createFitRequestWindowL f CreateFitRequest{..} = (\createFitRequestWindow -> CreateFitRequest { createFitRequestWindow, ..} ) <$> f createFitRequestWindow
{-# INLINE createFitRequestWindowL #-}



-- * CreateModelRequest

-- | 'createModelRequestProgramCode' Lens
createModelRequestProgramCodeL :: Lens_' CreateModelRequest (Text)
createModelRequestProgramCodeL f CreateModelRequest{..} = (\createModelRequestProgramCode -> CreateModelRequest { createModelRequestProgramCode, ..} ) <$> f createModelRequestProgramCode
{-# INLINE createModelRequestProgramCodeL #-}



-- * Fit

-- | 'fitName' Lens
fitNameL :: Lens_' Fit (Text)
fitNameL f Fit{..} = (\fitName -> Fit { fitName, ..} ) <$> f fitName
{-# INLINE fitNameL #-}



-- * Model

-- | 'modelCompilerOutput' Lens
modelCompilerOutputL :: Lens_' Model (Text)
modelCompilerOutputL f Model{..} = (\modelCompilerOutput -> Model { modelCompilerOutput, ..} ) <$> f modelCompilerOutput
{-# INLINE modelCompilerOutputL #-}

-- | 'modelName' Lens
modelNameL :: Lens_' Model (Text)
modelNameL f Model{..} = (\modelName -> Model { modelName, ..} ) <$> f modelName
{-# INLINE modelNameL #-}

-- | 'modelStancWarnings' Lens
modelStancWarningsL :: Lens_' Model (Text)
modelStancWarningsL f Model{..} = (\modelStancWarnings -> Model { modelStancWarnings, ..} ) <$> f modelStancWarnings
{-# INLINE modelStancWarningsL #-}



-- * Operation

-- | 'operationDone' Lens
operationDoneL :: Lens_' Operation (Bool)
operationDoneL f Operation{..} = (\operationDone -> Operation { operationDone, ..} ) <$> f operationDone
{-# INLINE operationDoneL #-}

-- | 'operationMetadata' Lens
operationMetadataL :: Lens_' Operation (Maybe A.Value)
operationMetadataL f Operation{..} = (\operationMetadata -> Operation { operationMetadata, ..} ) <$> f operationMetadata
{-# INLINE operationMetadataL #-}

-- | 'operationName' Lens
operationNameL :: Lens_' Operation (Text)
operationNameL f Operation{..} = (\operationName -> Operation { operationName, ..} ) <$> f operationName
{-# INLINE operationNameL #-}

-- | 'operationResult' Lens
operationResultL :: Lens_' Operation (Maybe A.Value)
operationResultL f Operation{..} = (\operationResult -> Operation { operationResult, ..} ) <$> f operationResult
{-# INLINE operationResultL #-}



-- * Parameter

-- | 'parameterConstrainedNames' Lens
parameterConstrainedNamesL :: Lens_' Parameter ([Text])
parameterConstrainedNamesL f Parameter{..} = (\parameterConstrainedNames -> Parameter { parameterConstrainedNames, ..} ) <$> f parameterConstrainedNames
{-# INLINE parameterConstrainedNamesL #-}

-- | 'parameterDims' Lens
parameterDimsL :: Lens_' Parameter ([Int])
parameterDimsL f Parameter{..} = (\parameterDims -> Parameter { parameterDims, ..} ) <$> f parameterDims
{-# INLINE parameterDimsL #-}

-- | 'parameterName' Lens
parameterNameL :: Lens_' Parameter (Text)
parameterNameL f Parameter{..} = (\parameterName -> Parameter { parameterName, ..} ) <$> f parameterName
{-# INLINE parameterNameL #-}



-- * Status

-- | 'statusCode' Lens
statusCodeL :: Lens_' Status (Int)
statusCodeL f Status{..} = (\statusCode -> Status { statusCode, ..} ) <$> f statusCode
{-# INLINE statusCodeL #-}

-- | 'statusDetails' Lens
statusDetailsL :: Lens_' Status (Maybe [A.Value])
statusDetailsL f Status{..} = (\statusDetails -> Status { statusDetails, ..} ) <$> f statusDetails
{-# INLINE statusDetailsL #-}

-- | 'statusMessage' Lens
statusMessageL :: Lens_' Status (Text)
statusMessageL f Status{..} = (\statusMessage -> Status { statusMessage, ..} ) <$> f statusMessage
{-# INLINE statusMessageL #-}

-- | 'statusStatus' Lens
statusStatusL :: Lens_' Status (Text)
statusStatusL f Status{..} = (\statusStatus -> Status { statusStatus, ..} ) <$> f statusStatus
{-# INLINE statusStatusL #-}



-- * V1ModelsGet200Response

-- | 'v1ModelsGet200ResponseModels' Lens
v1ModelsGet200ResponseModelsL :: Lens_' V1ModelsGet200Response (Maybe [Model])
v1ModelsGet200ResponseModelsL f V1ModelsGet200Response{..} = (\v1ModelsGet200ResponseModels -> V1ModelsGet200Response { v1ModelsGet200ResponseModels, ..} ) <$> f v1ModelsGet200ResponseModels
{-# INLINE v1ModelsGet200ResponseModelsL #-}



-- * V1ModelsModelIdLogProbGradPost200Response

-- | 'v1ModelsModelIdLogProbGradPost200ResponseGradLogProb' Lens
v1ModelsModelIdLogProbGradPost200ResponseGradLogProbL :: Lens_' V1ModelsModelIdLogProbGradPost200Response (Maybe [Double])
v1ModelsModelIdLogProbGradPost200ResponseGradLogProbL f V1ModelsModelIdLogProbGradPost200Response{..} = (\v1ModelsModelIdLogProbGradPost200ResponseGradLogProb -> V1ModelsModelIdLogProbGradPost200Response { v1ModelsModelIdLogProbGradPost200ResponseGradLogProb, ..} ) <$> f v1ModelsModelIdLogProbGradPost200ResponseGradLogProb
{-# INLINE v1ModelsModelIdLogProbGradPost200ResponseGradLogProbL #-}



-- * V1ModelsModelIdLogProbPost200Response

-- | 'v1ModelsModelIdLogProbPost200ResponseLogProb' Lens
v1ModelsModelIdLogProbPost200ResponseLogProbL :: Lens_' V1ModelsModelIdLogProbPost200Response (Maybe Double)
v1ModelsModelIdLogProbPost200ResponseLogProbL f V1ModelsModelIdLogProbPost200Response{..} = (\v1ModelsModelIdLogProbPost200ResponseLogProb -> V1ModelsModelIdLogProbPost200Response { v1ModelsModelIdLogProbPost200ResponseLogProb, ..} ) <$> f v1ModelsModelIdLogProbPost200ResponseLogProb
{-# INLINE v1ModelsModelIdLogProbPost200ResponseLogProbL #-}



-- * V1ModelsModelIdParamsPost200Response

-- | 'v1ModelsModelIdParamsPost200ResponseId' Lens
v1ModelsModelIdParamsPost200ResponseIdL :: Lens_' V1ModelsModelIdParamsPost200Response (Maybe Text)
v1ModelsModelIdParamsPost200ResponseIdL f V1ModelsModelIdParamsPost200Response{..} = (\v1ModelsModelIdParamsPost200ResponseId -> V1ModelsModelIdParamsPost200Response { v1ModelsModelIdParamsPost200ResponseId, ..} ) <$> f v1ModelsModelIdParamsPost200ResponseId
{-# INLINE v1ModelsModelIdParamsPost200ResponseIdL #-}

-- | 'v1ModelsModelIdParamsPost200ResponseParams' Lens
v1ModelsModelIdParamsPost200ResponseParamsL :: Lens_' V1ModelsModelIdParamsPost200Response (Maybe [Parameter])
v1ModelsModelIdParamsPost200ResponseParamsL f V1ModelsModelIdParamsPost200Response{..} = (\v1ModelsModelIdParamsPost200ResponseParams -> V1ModelsModelIdParamsPost200Response { v1ModelsModelIdParamsPost200ResponseParams, ..} ) <$> f v1ModelsModelIdParamsPost200ResponseParams
{-# INLINE v1ModelsModelIdParamsPost200ResponseParamsL #-}



-- * V1ModelsModelIdTransformInitsPost200Response

-- | 'v1ModelsModelIdTransformInitsPost200ResponseParamsRUnconstrained' Lens
v1ModelsModelIdTransformInitsPost200ResponseParamsRUnconstrainedL :: Lens_' V1ModelsModelIdTransformInitsPost200Response (Maybe [Double])
v1ModelsModelIdTransformInitsPost200ResponseParamsRUnconstrainedL f V1ModelsModelIdTransformInitsPost200Response{..} = (\v1ModelsModelIdTransformInitsPost200ResponseParamsRUnconstrained -> V1ModelsModelIdTransformInitsPost200Response { v1ModelsModelIdTransformInitsPost200ResponseParamsRUnconstrained, ..} ) <$> f v1ModelsModelIdTransformInitsPost200ResponseParamsRUnconstrained
{-# INLINE v1ModelsModelIdTransformInitsPost200ResponseParamsRUnconstrainedL #-}



-- * V1ModelsModelIdWriteArrayPost200Response

-- | 'v1ModelsModelIdWriteArrayPost200ResponseParamsRConstrained' Lens
v1ModelsModelIdWriteArrayPost200ResponseParamsRConstrainedL :: Lens_' V1ModelsModelIdWriteArrayPost200Response (Maybe [Double])
v1ModelsModelIdWriteArrayPost200ResponseParamsRConstrainedL f V1ModelsModelIdWriteArrayPost200Response{..} = (\v1ModelsModelIdWriteArrayPost200ResponseParamsRConstrained -> V1ModelsModelIdWriteArrayPost200Response { v1ModelsModelIdWriteArrayPost200ResponseParamsRConstrained, ..} ) <$> f v1ModelsModelIdWriteArrayPost200ResponseParamsRConstrained
{-# INLINE v1ModelsModelIdWriteArrayPost200ResponseParamsRConstrainedL #-}


